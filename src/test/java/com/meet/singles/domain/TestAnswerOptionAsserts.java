package com.meet.singles.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TestAnswerOptionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTestAnswerOptionAllPropertiesEquals(TestAnswerOption expected, TestAnswerOption actual) {
        assertTestAnswerOptionAutoGeneratedPropertiesEquals(expected, actual);
        assertTestAnswerOptionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTestAnswerOptionAllUpdatablePropertiesEquals(TestAnswerOption expected, TestAnswerOption actual) {
        assertTestAnswerOptionUpdatableFieldsEquals(expected, actual);
        assertTestAnswerOptionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTestAnswerOptionAutoGeneratedPropertiesEquals(TestAnswerOption expected, TestAnswerOption actual) {
        assertThat(actual)
            .as("Verify TestAnswerOption auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTestAnswerOptionUpdatableFieldsEquals(TestAnswerOption expected, TestAnswerOption actual) {
        assertThat(actual)
            .as("Verify TestAnswerOption relevant properties")
            .satisfies(a -> assertThat(a.getOptionText()).as("check optionText").isEqualTo(expected.getOptionText()))
            .satisfies(a -> assertThat(a.getValue()).as("check value").isEqualTo(expected.getValue()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTestAnswerOptionUpdatableRelationshipsEquals(TestAnswerOption expected, TestAnswerOption actual) {
        assertThat(actual)
            .as("Verify TestAnswerOption relationships")
            .satisfies(a -> assertThat(a.getQuestion()).as("check question").isEqualTo(expected.getQuestion()));
    }
}
