package com.meet.singles.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserEventAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserEventAllPropertiesEquals(UserEvent expected, UserEvent actual) {
        assertUserEventAutoGeneratedPropertiesEquals(expected, actual);
        assertUserEventAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserEventAllUpdatablePropertiesEquals(UserEvent expected, UserEvent actual) {
        assertUserEventUpdatableFieldsEquals(expected, actual);
        assertUserEventUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserEventAutoGeneratedPropertiesEquals(UserEvent expected, UserEvent actual) {
        assertThat(actual)
            .as("Verify UserEvent auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserEventUpdatableFieldsEquals(UserEvent expected, UserEvent actual) {
        assertThat(actual)
            .as("Verify UserEvent relevant properties")
            .satisfies(a -> assertThat(a.getStatus()).as("check status").isEqualTo(expected.getStatus()))
            .satisfies(a -> assertThat(a.getCheckedIn()).as("check checkedIn").isEqualTo(expected.getCheckedIn()))
            .satisfies(a -> assertThat(a.getMatchCompleted()).as("check matchCompleted").isEqualTo(expected.getMatchCompleted()))
            .satisfies(a -> assertThat(a.getPaymentStatus()).as("check paymentStatus").isEqualTo(expected.getPaymentStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserEventUpdatableRelationshipsEquals(UserEvent expected, UserEvent actual) {
        assertThat(actual)
            .as("Verify UserEvent relationships")
            .satisfies(a -> assertThat(a.getPersonProfile()).as("check personProfile").isEqualTo(expected.getPersonProfile()))
            .satisfies(a -> assertThat(a.getEvent()).as("check event").isEqualTo(expected.getEvent()));
    }
}
