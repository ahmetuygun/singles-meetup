package com.meet.singles.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserTestAnswerAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserTestAnswerAllPropertiesEquals(UserTestAnswer expected, UserTestAnswer actual) {
        assertUserTestAnswerAutoGeneratedPropertiesEquals(expected, actual);
        assertUserTestAnswerAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserTestAnswerAllUpdatablePropertiesEquals(UserTestAnswer expected, UserTestAnswer actual) {
        assertUserTestAnswerUpdatableFieldsEquals(expected, actual);
        assertUserTestAnswerUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserTestAnswerAutoGeneratedPropertiesEquals(UserTestAnswer expected, UserTestAnswer actual) {
        assertThat(actual)
            .as("Verify UserTestAnswer auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserTestAnswerUpdatableFieldsEquals(UserTestAnswer expected, UserTestAnswer actual) {
        assertThat(actual)
            .as("Verify UserTestAnswer relevant properties")
            .satisfies(a -> assertThat(a.getAnswerValue()).as("check answerValue").isEqualTo(expected.getAnswerValue()))
            .satisfies(a -> assertThat(a.getTimestamp()).as("check timestamp").isEqualTo(expected.getTimestamp()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserTestAnswerUpdatableRelationshipsEquals(UserTestAnswer expected, UserTestAnswer actual) {
        assertThat(actual)
            .as("Verify UserTestAnswer relationships")
            .satisfies(a -> assertThat(a.getQuestion()).as("check question").isEqualTo(expected.getQuestion()))
            .satisfies(a -> assertThat(a.getPersonProfile()).as("check personProfile").isEqualTo(expected.getPersonProfile()))
            .satisfies(a -> assertThat(a.getAnswer()).as("check answer").isEqualTo(expected.getAnswer()));
    }
}
